(function(b){b.QNAStart=new b.QNAStep(function(a){a("Select the ZIP file to import")},function(a){a("Select the ZIP file that contains the valid Publican book that you wish to import into PressGang CCMS.")},function(a){a([new b.QNAVariables(null,function(a){a([new b.QNAVariable(function(c){c(b.InputEnum.SINGLE_FILE)},function(c){c("Publican ZIP File")},function(c){c("ZipFile")})])})])},null,function(a,e,c,d){(new b.QNAZipModel).getCachedEntries(d.ZipFile,function(c){var d=!1;b.angular.forEach(c,function(c,
a){if("publican.cfg"===c.filename)return d=!0,!1});d?a(null):e("Error","The ZIP file did not contain a publican.cfg file.")},function(c){e("Error","Could not process the ZIP file!")})},function(a,b,c,d){a(h)});var h=new b.QNAStep(function(a){a("Select the main XML file")},function(a){a("Select the main XML file from the ZIP archive. Publican conventions mean the file should be named after the book title in the Book_Info.xml file. This import tool will attempt to read the Book_Info.xml file to find the book title, and from that select the main XML file. You only need to make a manual selection if the import tool could not find the main XML file, or if you want to override the default selection.")},
function(a){a([new b.QNAVariables(null,function(a){a([new b.QNAVariable(function(c){c(b.InputEnum.LISTBOX)},null,function(c){c("MainXMLFile")},function(c,a,e,f){(new b.QNAZipModel).getCachedEntries(f.ZipFile,function(a){var e=[];b.angular.forEach(a,function(a,c){/^.*?\.xml$/.test(a.filename)&&e.push(a.filename)});c(e)})},function(a,e,g,f){(new b.QNAZipModel).getCachedEntries(f.ZipFile,function(e){b.angular.forEach(e,function(d,f){if(/^en-US\/Book_Info\.xml$/.test(d.filename))return(new b.QNAZipModel).getTextFromFile(d,
function(d){if(d=/<title>(.*?)<\/title>/.exec(d)){var f="en-US/"+d[1].replace(/ /g,"_")+".xml";b.angular.forEach(e,function(b,e){b.filename===f&&a(f)})}}),!1})});a(null)})])})])},null,null,function(a){a(k)}),k=new b.QNAStep(function(a){a("Create or overwrite a content spec?")},function(a){a("This wizard can create a new content specification, or overwrite the contents of an existing one. You will usually want to create a new content specification, but if you are reimporting a book and want to overwrite the previously imported content spec, select the overwrite option.")},
function(a){a([new b.QNAVariables(null,function(a){a([new b.QNAVariable(function(a){a(b.InputEnum.RADIO_BUTTONS)},function(a){a(["Create a new content spec","Overwrite an existing content spec"])},function(a){a("CreateOrOverwrite")},function(a){a(["CREATE","OVERWRITE"])},function(a){a("CREATE")})])})])},null,null,function(a,b,c,d){a("CREATE"===d.CreateOrOverwrite?g:l)}),l=new b.QNAStep(function(a){a("Create or overwrite a content spec?")},function(a){a("This wizard can create a new content specification, or overwrite the contents of an existing one. You will usually want to create a new content specification, but if you are reimporting a book and want to overwrite the previously imported content spec, select the overwrite option.")},
function(a){a([new b.QNAVariables(null,function(a){a([new b.QNAVariable(function(a){a(b.InputEnum.TEXTBOX)},function(a){a("Existing content specification ID")},function(a){a("ExistingContentSpecID")},null,null)])})])},null,null,function(a){a(g)}),g=new b.QNAStep(function(a){a("Create or overwrite a content spec?")},function(a){a("This wizard can create a new content specification, or overwrite the contents of an existing one. You will usually want to create a new content specification, but if you are reimporting a book and want to overwrite the previously imported content spec, select the overwrite option.")},
null,function(a){a([new b.QNAVariables(null,function(a){a([new b.QNAVariable(function(a){a(b.InputEnum.RADIO_BUTTONS)},function(a){a(["Create a new content spec","Overwrite an existing content spec"])},function(a){a("CreateOrOverwrite")},function(a){a(["CREATE","OVERWRITE"])},function(a){a("CREATE")})])})])},null,function(a,b,c,d){a(the_next_step)})})(this);
