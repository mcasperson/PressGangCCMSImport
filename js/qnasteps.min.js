(function(b){b.QNAStart=new b.QNAStep(function(b){b("Select the ZIP file to import")},function(b){b("Select the ZIP file that contains the valid Publican book that you wish to import into PressGang CCMS.")},function(c){c([new b.QNAVariables(null,function(c){c([new b.QNAVariable(function(a){a(b.InputEnum.SINGLE_FILE)},function(a){a("Publican ZIP File")},function(a){a("ZipFile")})])})])},null,null,function(c,d,a,e){e.ZipFile?(new b.QNAZipModel).getCachedEntries(e.ZipFile,function(a){var e=!1;b.angular.forEach(a,
function(a,b){if("publican.cfg"===a.filename)return e=!0,!1});e?c(null):d("Error","The ZIP file did not contain a publican.cfg file.")},function(a){d("Error","Could not process the ZIP file!")}):d("Please select a file","You need to select a file before continuing.")},function(b,d,a,e){b(h)});var h=new b.QNAStep(function(b){b("Select the main XML file")},function(b){b("Select the main XML file from the ZIP archive. Publican conventions mean the file should be named after the book title in the Book_Info.xml file. This import tool will attempt to read the Book_Info.xml file to find the book title, and from that select the main XML file. You only need to make a manual selection if the import tool could not find the main XML file, or if you want to override the default selection.")},
function(c){c([new b.QNAVariables(null,function(c){c([new b.QNAVariable(function(a){a(b.InputEnum.LISTBOX)},null,function(a){a("MainXMLFile")},function(a,c,d,f){(new b.QNAZipModel).getCachedEntries(f.ZipFile,function(c){var d=[];b.angular.forEach(c,function(a,b){/^.*?\.xml$/.test(a.filename)&&d.push(a.filename)});a(d)})},function(a,c,d,f){(new b.QNAZipModel).getCachedEntries(f.ZipFile,function(c){b.angular.forEach(c,function(d,e){if(/^en-US\/Book_Info\.xml$/.test(d.filename))return(new b.QNAZipModel).getTextFromFile(d,
function(d){if(d=/<title>(.*?)<\/title>/.exec(d)){var e="en-US/"+d[1].replace(/ /g,"_")+".xml";b.angular.forEach(c,function(b,c){b.filename===e&&a(e)})}}),!1})});a(null)})])})])},null,null,null,function(b){b(k)}),k=new b.QNAStep(function(b){b("Create or overwrite a content spec?")},function(b){b("This wizard can create a new content specification, or overwrite the contents of an existing one. You will usually want to create a new content specification, but if you are reimporting a book and want to overwrite the previously imported content spec, select the overwrite option.")},
function(c){c([new b.QNAVariables(null,function(c){c([new b.QNAVariable(function(a){a(b.InputEnum.RADIO_BUTTONS)},function(a){a(["Create a new content spec","Overwrite an existing content spec"])},function(a){a("CreateOrOverwrite")},function(a){a(["CREATE","OVERWRITE"])},function(a){a("CREATE")})])})])},null,null,null,function(b,d,a,e){b("CREATE"===e.CreateOrOverwrite?g:l)}),l=new b.QNAStep(function(b){b("Create or overwrite a content spec?")},function(b){b("This wizard can create a new content specification, or overwrite the contents of an existing one. You will usually want to create a new content specification, but if you are reimporting a book and want to overwrite the previously imported content spec, select the overwrite option.")},
function(c){c([new b.QNAVariables(null,function(c){c([new b.QNAVariable(function(a){a(b.InputEnum.TEXTBOX)},function(a){a("Existing content specification ID")},function(a){a("ExistingContentSpecID")},null,null)])})])},null,null,null,function(b){b(g)}),g=new b.QNAStep(function(b){b("Importing Publican Book")},null,null,function(c){c([new b.QNAVariables(null,function(c){c([new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Resolving xi:includes")},function(a){a("ResolvedXIIncludes")},
null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Finding entities in XML")},function(a){a("FoundEntities")},null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Finding entity definitions")},function(a){a("FoundEntityDefinitions")},null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Finding revision history")},function(a){a("FoundRevisionHistory")},null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},
function(a){a("Finding author group")},function(a){a("FoundAuthorGroup")},null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Finding and uploading images")},function(a){a("FoundImages")},null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Resolving book structure")},function(a){a("ResolvedBookStructure")},null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Resolving xrefs")},function(a){a("ResolvedXrefs")},null,
null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Uploading content specification")},function(a){a("UploadedContentSpecification")},null,null),new b.QNAVariable(function(a){a(b.InputEnum.PROGRESS)},function(a){a("Progress")},function(a){a("UploadProgress")},null,function(a){a([9,0])})])})])},function(b,d,a,e){e.UploadProgress[1]=1;b()},null,function(b,d,a,e){b(the_next_step)})})(this);
