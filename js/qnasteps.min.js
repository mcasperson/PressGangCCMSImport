(function(b){var f=new b.QNAZipModel;b.QNAStart=new b.QNAStep(function(b){b("Select the ZIP file to import")},function(b){b("Select the ZIP file that contains the valid Publican book that you wish to import into PressGang CCMS.")},function(c){c([new b.QNAVariables(null,function(c){c([new b.QNAVariable(function(a){a(b.InputEnum.SINGLE_FILE)},function(a){a("Publican ZIP File")},function(a){a("ZipFile")})])})])},null,null,function(c,e,a,d){d.ZipFile?f.getCachedEntries(d.ZipFile,function(a){var d=!1;
b.angular.forEach(a,function(a,b){if("publican.cfg"===a.filename)return d=!0,!1});d?c(null):e("Error","The ZIP file did not contain a publican.cfg file.")},function(a){e("Error","Could not process the ZIP file!")}):e("Please select a file","You need to select a file before continuing.")},function(b,e,a,d){b(n)});var n=new b.QNAStep(function(b){b("Select the main XML file")},function(b){b("Select the main XML file from the ZIP archive. Publican conventions mean the file should be named after the book title in the Book_Info.xml file. This import tool will attempt to read the Book_Info.xml file to find the book title, and from that select the main XML file. You only need to make a manual selection if the import tool could not find the main XML file, or if you want to override the default selection.")},
function(c){c([new b.QNAVariables(null,function(c){c([new b.QNAVariable(function(a){a(b.InputEnum.LISTBOX)},null,function(a){a("MainXMLFile")},function(a,c,e,k){f.getCachedEntries(k.ZipFile,function(c){var d=[];b.angular.forEach(c,function(a,b){/^.*?\.xml$/.test(a.filename)&&d.push(a.filename)});a(d)})},function(a,c,e,k){f.getCachedEntries(k.ZipFile,function(c){b.angular.forEach(c,function(d,e){if(/^en-US\/Book_Info\.xml$/.test(d.filename))return f.getTextFromFile(d,function(d){if(d=/<title>(.*?)<\/title>/.exec(d)){var e=
"en-US/"+d[1].replace(/ /g,"_")+".xml";b.angular.forEach(c,function(b,c){b.filename===e&&a(e)})}}),!1})});a(null)})])})])},null,null,null,function(b){b(s)}),s=new b.QNAStep(function(b){b("Create or overwrite a content spec?")},function(b){b("This wizard can create a new content specification, or overwrite the contents of an existing one. You will usually want to create a new content specification, but if you are reimporting a book and want to overwrite the previously imported content spec, select the overwrite option.")},
function(c){c([new b.QNAVariables(null,function(c){c([new b.QNAVariable(function(a){a(b.InputEnum.RADIO_BUTTONS)},function(a){a(["Create a new content spec","Overwrite an existing content spec"])},function(a){a("CreateOrOverwrite")},function(a){a(["CREATE","OVERWRITE"])},function(a){a("CREATE")})])})])},null,null,null,function(b,e,a,d){b("CREATE"===d.CreateOrOverwrite?g:t)}),t=new b.QNAStep(function(b){b("Create or overwrite a content spec?")},function(b){b("This wizard can create a new content specification, or overwrite the contents of an existing one. You will usually want to create a new content specification, but if you are reimporting a book and want to overwrite the previously imported content spec, select the overwrite option.")},
function(c){c([new b.QNAVariables(null,function(c){c([new b.QNAVariable(function(a){a(b.InputEnum.TEXTBOX)},function(a){a("Existing content specification ID")},function(a){a("ExistingContentSpecID")},null,null)])})])},null,null,null,function(b){b(g)}),g=new b.QNAStep(function(b){b("Importing Publican Book")},null,null,function(c){c([new b.QNAVariables(null,function(c){c([new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Resolving xi:includes")},function(a){a("ResolvedXIIncludes")},
null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Finding entities in XML")},function(a){a("FoundEntities")},null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Finding entity definitions")},function(a){a("FoundEntityDefinitions")},null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Removing XML preamble")},function(a){a("RemovedXMLPreamble")},null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},
function(a){a("Finding revision history")},function(a){a("FoundRevisionHistory")},null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Finding author group")},function(a){a("FoundAuthorGroup")},null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Finding and uploading images")},function(a){a("FoundImages")},null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Resolving book structure")},function(a){a("ResolvedBookStructure")},
null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Resolving xrefs")},function(a){a("ResolvedXrefs")},null,null),new b.QNAVariable(function(a){a(b.InputEnum.CHECKBOX)},function(a){a("Uploading content specification")},function(a){a("UploadedContentSpecification")},null,null),new b.QNAVariable(function(a){a(b.InputEnum.PROGRESS)},function(a){a("Progress")},function(a){a("UploadProgress")},null,function(a){a([10,0])})])})])},function(c,e,a,d){var g=[],k=function(a){var b=
"",e;-1!==(e=d.MainXMLFile.lastIndexOf("/"))&&(b=d.MainXMLFile.substring(0,e));f.getCachedEntries(d.ZipFile,function(e){var p=function(l){if(l>=e.length)d.UploadProgress[1]=3,d.FoundEntityDefinitions=!0,c(),n(a);else{var h=e[l];0===h.filename.indexOf(b)?f.getTextFromFile(h,function(a){for(var b=/<!ENTITY\s+[^\s]+\s+('|").*?('|")\s*>/g,c;c=b.exec(a);)-1===g.indexOf(c[0])&&g.push(c[0]);p(l+1)}):p(l+1)}};p(0)})},n=function(a){a=a.replace(/<\?xml.*?>/g,"");a.replace(/<!DOCTYPE[\s\S]*?\[[\s\S]*?\]>/g,
"");d.UploadProgress[1]=4;d.RemovedXMLPreamble=!0;c()};(function(){var a=/<\s*xi:include\s+xmlns:xi\s*=\s*("|')http:\/\/www\.w3\.org\/2001\/XInclude("|')\s+href\s*=\s*("|')(.*?\.xml)("|')\s*\/\s*>/,g=/^Common_Content/,m=function(b,c,l){var h=a.exec(b);if(h){var q="",r;-1!==(r=c.lastIndexOf("/"))&&(q=c.substring(0,r));if(g.test(h[4]))m(b.replace(h[0],""),c,l);else{var k=q+"/"+h[4];f.getTextFromFileName(d.ZipFile,k,function(a){m(a,k,function(a){m(b.replace(h[0],a),c,l)})},function(a){e(a)})}}else l(b)};
f.getTextFromFileName(d.ZipFile,d.MainXMLFile,function(a){m(a,d.MainXMLFile,function(a){d.UploadProgress[1]=1;d.ResolvedXIIncludes=!0;c();for(var e=/&.*?;/,h=[],f;f=e.exec(a);){for(var g;-1!==a.indexOf(g="#"+Math.floor(1E9*Math.random()+1)+"#"););h.push({placeholder:g,entity:f[0]});a=a.replace(RegExp(b.escapeRegExp(f[0]),"g"),g)}d.UploadProgress[1]=2;d.FoundEntities=!0;c();k(a)})})})()},null,function(b,e,a,d){b(the_next_step)})})(this);
